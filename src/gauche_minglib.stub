;;;
;;; gauche_minglib.stub
;;;

"
#include \"ming.h\"
#include \"gauche_ming.h\"
"

;; The following entry is a dummy one.
;; Replace it for your definitions.

(define-cproc test-gauche_ming () ::<const-cstring>
  (result "gauche_ming is working"))

(define-cclass <swf-movie> :base "ScmSWFMovie*" "Scm_SWFMovieClass"
  ()
  ()
  [allocator
   (let* ([ctx::ScmSWFMovie* (SCM_ALLOCATE ScmSWFMovie klass)])
     (SCM_SET_CLASS ctx klass)
     (return (SCM_OBJ ctx)))])

;;(define-enum MING_VERSION)
;;(define-constant MING_VERSION_TEXT (c "0.4.4"))

(define-cproc ming-init () ::<int>
  (result Ming_init))

(define-cproc ming-cleanup () ::<void>
  (Ming_cleanup))

(define-cproc ming-collect-garbage () ::<void>
  (Ming_collectGarbage))

(define-cproc ming-use-constants (flag::<fixnum>) ::<void>
  (Ming_useConstants flag))

(define-cproc ming-set-cubic-threshold (num::<fixnum>) ::<void>
  (Ming_setCubicThreshold num))

(define-cproc ming-set-scale (scale::<real>) ::<void>
  (Ming_setScale scale))

(define-cproc ming-get-scale () ::<real>
  (result (Ming_getScale)))

(define-cproc ming-use-swf-version (version::<fixnum>) ::<void>
  (Ming_useSWFVersion version))

(define-cproc ming-set-swf-compression (level::<fixnum>) ::<int>
  (result (Ming_setSWFCompression level)))

;; Local variables:
;; mode: scheme
;; end:
